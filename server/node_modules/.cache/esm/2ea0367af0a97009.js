let User,stripe;_f0a‍.x([["makeInstructor",()=>makeInstructor],["getAccountStatus",()=>getAccountStatus]]);_f0a‍.w("../models/user",[["default",["User"],function(v){User=v}]]);_f0a‍.w("stripe",[["default",["stripe"],function(v){stripe=v}]]);

const queryString = require('query-string');


// Initialize Stripe with your secret key
const stripeSecretKey = process.env.STRIPE_SECRET;
const stripeInstance = stripe(stripeSecretKey);

       const makeInstructor = async (req, res) => {
  try {
    // 1. find user from db
    const user = await User.findById(req.user._id).exec();
    // 2. if user dont have stripe_account_id yet, then create new
    if (!user.stripe_account_id) {
      const account = await stripeInstance.accounts.create({ type: "express" });
      user.stripe_account_id = account.id;
      user.save();
    }
    // 3. create account link based on account id (for frontend to complete onboarding)
    let accountLink = await stripeInstance.accountLinks.create({
      account: user.stripe_account_id,
      refresh_url: process.env.STRIPE_REDIRECT_URL,
      return_url: process.env.STRIPE_REDIRECT_URL,
      type: "account_onboarding",
    });
    // 4. pre-fill any info such as email (optional), then send url resposne to frontend
    accountLink = {
      ...accountLink,
      "stripe_user[email]": user.email,
    };
    // 5. then send the account link as response to fronend
    res.send(`${accountLink.url}?${queryString.stringify(accountLink)}`);
  } catch (err) {
    _f0a‍.g.console.log("MAKE INSTRUCTOR ERR ", err);
  }
};

       const getAccountStatus = async (req, res) => {
  try {
    const user = await User.findById(req.user._id).exec();
    const account = await stripeInstance.accounts.retrieve(user.stripe_account_id);
    if (!account.charges_enabled) {
      return res.status(401).send("Unauthorized");
    } else {
      const statusUpdated = await User.findByIdAndUpdate(
        user._id,
        {
          stripe_seller: account,
          $addToSet: { role: "Instructor" },
        },
        { new: true }
      )
        .select("-password")
        .exec();
      res.json(statusUpdated);
    }
  } catch (err) {
    _f0a‍.g.console.log(err);
  }
};
